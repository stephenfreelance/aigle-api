# Generated by Django 5.0.6 on 2024-10-18 09:57

import django.contrib.gis.db.models.fields
import django.core.validators
import django.db.models.deletion
import simple_history.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("core", "0071_usergroup_user_group_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalDetection",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("batch_id", models.CharField(max_length=255, null=True)),
                ("import_id", models.IntegerField(null=True)),
                (
                    "geometry",
                    django.contrib.gis.db.models.fields.GeometryField(srid=4326),
                ),
                (
                    "score",
                    models.FloatField(
                        default=1,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(1),
                        ],
                    ),
                ),
                (
                    "detection_source",
                    models.CharField(
                        choices=[
                            ("INTERFACE_DRAWN", "INTERFACE_DRAWN"),
                            ("ANALYSIS", "ANALYSIS"),
                        ],
                        default="INTERFACE_DRAWN",
                        max_length=255,
                    ),
                ),
                ("auto_prescribed", models.BooleanField(default=False)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "detection_data",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.detectiondata",
                    ),
                ),
                (
                    "detection_object",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.detectionobject",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tile",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.tile",
                    ),
                ),
                (
                    "tile_set",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.tileset",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical detection",
                "verbose_name_plural": "historical detections",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDetectionData",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "detection_control_status",
                    models.CharField(
                        choices=[
                            ("NOT_CONTROLLED", "NOT_CONTROLLED"),
                            ("SIGNALED_COLLECTIVITY", "SIGNALED_COLLECTIVITY"),
                            ("SIGNALED_COMMUNE", "SIGNALED_COMMUNE"),
                            ("CONTROLLED_FIELD", "CONTROLLED_FIELD"),
                            ("PRIOR_LETTER_SENT", "PRIOR_LETTER_SENT"),
                            ("OFFICIAL_REPORT_DRAWN_UP", "OFFICIAL_REPORT_DRAWN_UP"),
                            (
                                "OBSERVARTION_REPORT_REDACTED",
                                "OBSERVARTION_REPORT_REDACTED",
                            ),
                            ("VERBALIZED", "VERBALIZED"),
                            ("REHABILITATED", "REHABILITATED"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "detection_validation_status",
                    models.CharField(
                        choices=[
                            ("DETECTED_NOT_VERIFIED", "DETECTED_NOT_VERIFIED"),
                            ("SUSPECT", "SUSPECT"),
                            ("LEGITIMATE", "LEGITIMATE"),
                            ("INVALIDATED", "INVALIDATED"),
                        ],
                        max_length=255,
                    ),
                ),
                (
                    "detection_prescription_status",
                    models.CharField(
                        choices=[
                            ("PRESCRIBED", "PRESCRIBED"),
                            ("NOT_PRESCRIBED", "NOT_PRESCRIBED"),
                        ],
                        max_length=255,
                        null=True,
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "user_last_update",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical detection data",
                "verbose_name_plural": "historical detection datas",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalDetectionObject",
            fields=[
                (
                    "id",
                    models.BigIntegerField(
                        auto_created=True, blank=True, db_index=True, verbose_name="ID"
                    ),
                ),
                ("deleted", models.BooleanField(default=False)),
                ("deleted_at", models.DateTimeField(null=True)),
                ("created_at", models.DateTimeField(blank=True, editable=False)),
                ("updated_at", models.DateTimeField(blank=True, editable=False)),
                (
                    "uuid",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("batch_id", models.CharField(max_length=255, null=True)),
                ("import_id", models.IntegerField(null=True)),
                ("address", models.CharField(max_length=255, null=True)),
                ("comment", models.TextField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField(db_index=True)),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "object_type",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.objecttype",
                    ),
                ),
                (
                    "parcel",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="core.parcel",
                    ),
                ),
            ],
            options={
                "verbose_name": "historical detection object",
                "verbose_name_plural": "historical detection objects",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
